function cp
{
    [ -n "$DEBUG" ] && echo "v.0.2" 1>&2;
    [ -n "$DEBUG" ] && echo "childNo.de" 1>&2;
    [ -n "$DEBUG" ] && echo "inspired by @marcdix (twitter) / @mdix (bitbucket)" 1>&2;
    evalcmd="$(which cp)"
    $evalcmd "$@"
    evalExitCode=$?

    if [ $evalExitCode != 0 ]; then
        return $evalExitCode
    fi

    # quit if not interactive
    [[ $- != *i* ]] && return $evalExitCode

    # Workaround: quit if its the copy command from shell_session_save_history (in /etc/bashrc_Apple_Terminal)
    [ -f "/etc/bashrc_Apple_Terminal" -a "$1" == "$SHELL_SESSION_HISTFILE_SHARED" -a "$2" == "$SHELL_SESSION_HISTFILE" ] && return $evalExitCode

    targetDir=${!#}
    if [ -f "${!#}" ]; then
        targetDir=$(dirname $targetDir)
    else
        ## TODO: when only two parameters are given, ask for copy into or over the old directory
        #echo read -p "target is a directory, should I make a copy"
        echo ""
    fi
    if [ -d "$targetDir" -a ! "$targetDir" == "." ]; then
        read -p "change to directory '$targetDir'? (y/n [y]) ";
        if [ "$REPLY" != "n" -a "$REPLY" != "N" -a "$REPLY" != "NO" -a "$REPLY" != "no" ]; then
            cd "$targetDir";
        fi
    fi
    return $evalExitCode;
}
